package com.maxdsc;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.ArrayDeque;

public interface Convertible {
    /**
     * Получить весь текст PDF-выписки.
     *
     * @return строку, в которой будет весь текст PDF-выписки.
     */
    String getText() throws IOException;

    /**
     * Помещает весь текст выписки в коллекцию постранично, но до {@link Converter} DROPPED_END_LINES строк с конца,
     * для того, чтобы убрать со страницы нижний колонтитул типа: <div><pre>
     * Выписка из ЕГРЮЛ
     * 09.11.2025 21:52             ОГРН 1000000000000              Страница 1 из 17
     * </pre></div>
     *
     * @return коллекцию, где каждый элемент это строка из выписки.
     */
    ArrayDeque<String> textToCollect() throws IOException;

    /**
     * Считывает из файла table_template.csv шаблон выписки в коллекцию.
     *
     * @return коллекцию, где каждый элемент это строка из шаблона выписки.
     */
    ArrayDeque<String> getTemplate() throws URISyntaxException, IOException;

    /**
     * Создает разделы выписки согласно шаблону.
     *
     * @param text         коллекция строк, где собран весь текст выписки.
     * @param allTemplates коллекция всех шаблонов.
     * @return разделы выписки, соответствующие шаблону всех разделов.
     */
    ArrayDeque<Section> fillSections(ArrayDeque<String> text, ArrayDeque<String> allTemplates) throws Exception;

    /**
     * Передает верхний раздел, его подразделы и название следующего раздела в коллекцию. В исходной коллекции, где изначально должны быть собранны все шаблоны, удаляется верхний раздел и его подразделы, оставляя таким образом вверху наименование следующего раздела.
     * Все элементы коллекции до последнего будут иметь минимум 2 строки, а последний будет иметь одну строку.
     * <div><pre>
     * <b>Изначальный файл шаблона:</b>
     * Р;Наименование
     * П;какой-то подраздел
     * Р;Место нахождения и адрес юридического лица
     * Р;Сведения о регистрации
     * <b>После применения метода изначальный превратится в:</b>
     * Р;Место нахождения и адрес юридического лица
     * Р;Сведения о регистрации
     * <b>А возвращаемая коллекция станет:</b>
     * Р;Наименование
     * П;какой-то подраздел
     * Р;Место нахождения и адрес юридического лица
     * </pre></div>
     *
     * @param allTemplates коллекция всех шаблонов.
     * @return коллекцию, где каждый элемент, кроме последнего это название верхнего раздела и его подразделы, а последний элемент это название следующего раздела.
     */
    ArrayDeque<String> defineSectionInTemplates(ArrayDeque<String> allTemplates);

    /**
     * Создает раздел выписки. Строки подраздела заполняются из текста выписки, между верхней строкой шаблона и следующей. Если имеются подразделы, то данный метод применяется повторно, но результат заносится в коллекцию подразделов.
     *
     * @param text            коллекция строк, где собран весь текст выписки.
     * @param sectionTemplate коллекция строк, где обозначен раздел, его подразделы и название следующего раздела.
     * @return раздел выписки, соответствующий шаблону раздела.
     */
    Section fillOneSection(ArrayDeque<String> text, ArrayDeque<String> sectionTemplate) throws Exception;

    /**
     * Позволяет разложить нумерованные подразделы в коллекцию подразделов {@link Section}. У каждого подраздела name будет равен цифре нумерации. Удалит из коллекции текста нумерованный подраздел.
     *
     * @param text                 коллекция строк, где собран весь текст выписки.
     * @param afterNumericTemplate строка следующего шаблона после строки нумерованного подраздела (П#).
     * @return коллекцию нумерованных подразделов.
     * @throws Exception если подраздел не начинается со строки "1".
     */
    ArrayDeque<Section> getNumericSubsections(ArrayDeque<String> text, String afterNumericTemplate) throws Exception;

    /**
     * Является ли первый элемент коллекции строкой-шаблоном.
     *
     * @param text         коллекция строк, где собран весь текст выписки.
     * @param nextTemplate строка следующего шаблона из коллекции шаблонов.
     * @return true, если первый элемент коллекции является строкой-шаблоном.
     */
    boolean checkNextTemplate(ArrayDeque<String> text, String nextTemplate);
}
